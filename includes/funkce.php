<?php/* =============================================================================================  ZJISTI AKTUALNI HEZKOU URL  ============================================================================================= */function curPageURL() {    $pageURL = 'http';    if ($_SERVER["HTTPS"] == "on" AND isset($_SERVER["HTTPS"])) {;        $pageURL .= "s";    }    $pageURL .= "://";// $_SERVER["REQUEST_URI"] = str_replace("&", "&amp;", $_SERVER["REQUEST_URI"]);    if ($_SERVER["SERVER_PORT"] != "80") {        $pageURL .= $_SERVER["SERVER_NAME"] . ":" . $_SERVER["SERVER_PORT"] . $_SERVER["REQUEST_URI"];    } else {        $pageURL .= $_SERVER["SERVER_NAME"] . $_SERVER["REQUEST_URI"];    }    return $pageURL;}$aktualniUrlFull = curPageURL(); //Aktualni URL návštěvníkafunction poster($str, $type = NULL, $trim = NULL) {    if (is_array($str)) {        foreach ($str as $k => $v) {            if (is_array($v)) {                $ret[$k] = poster($v, $type, $trim);            } else {                if ($v == "") {                    //BOF - nic - prazdna hodnota                    $ret['db'][$k] = $v;                    $ret['plain'][$k] = $v;                    if ($type == "db_set") {                        $ret['db_set'][$k] = "`" . $k . "`='" . $v . "'";                    } elseif ($type == "db_insert") {                        $ret['db_insert'][$k] = "`" . $k . "`";                        $ret['db_value'][$k] = "'" . $v . "'";                    } elseif ($type == "db_set_date") {                        $ret['db_set_date'][$k] = "`" . $k . "`= NULL ";                    } elseif ($type == "db_set_timestamp") {                        $ret['db_set_timestamp'][$k] = "`" . $k . "`= NULL ";                    } elseif ($type == "db_set_null") {                        $ret['db_set_null'][$k] = "`" . $k . "`= NULL ";                    }                    //EOF- nic                } else {                    //BOF - osetreni - hodnoty se osetruji                    //vyhod prazdne znaky kdyz mas                    if ($trim == "trim") {                        $v = str_replace(" ", "", $v);                    } elseif ($trim == "telephone") {                        $v = str_replace(" ", "", $v);                        $v = str_replace("+", "", $v);                    }                    if (get_magic_quotes_gpc()) {                        $ret['db'][$k] = $v;                        $ret['plain'][$k] = stripslashes($v);                        if ($type == "db_set") {                            $ret['db_set'][$k] = "`" . $k . "`='" . $v . "'";                        } elseif ($type == "db_insert") {                            $ret['db_insert'][$k] = "`" . $k . "`";                            $ret['db_value'][$k] = "'" . $v . "'";                        } elseif ($type == "db_set_date") {                            $ret['db_set_date'][$k] = "`" . $k . "`='" . dateDB($v) . "'";                        } elseif ($type == "db_set_timestamp") {                            $ret['db_set_timestamp'][$k] = "`" . $k . "`='" . dateDB($v, "od") . "'";                        } elseif ($type == "db_set_null") {                            $ret['db_set_null'][$k] = "`" . $k . "`= '$v' ";                        }                    } else {                        $ret['db'][$k] = addslashes($v);                        $ret['plain'][$k] = $v;                        if ($type == "db_set") {                            $ret['db_set'][$k] = "`" . $k . "`='" . addslashes($v) . "'";                        } elseif ($type == "db_insert") {                            $ret['db_insert'][$k] = "`" . $k . "`";                            $ret['db_value'][$k] = "'" . addslashes($v) . "'";                        } elseif ($type == "db_set_date") {                            $ret['db_set_date'][$k] = "`" . $k . "`='" . dateDB($v) . "'";                        } elseif ($type == "db_set_timestamp") {                            $ret['db_set_timestamp'][$k] = "`" . $k . "`='" . dateDB($v, "od") . "'";                        } elseif ($type == "db_set_null") {                            $ret['db_set_null'][$k] = "`" . $k . "`= '" . addslashes($v) . "' ";                        }                    }                    //EOF - osetreni                }            }        }    } else {        $arr = poster(array($str), $type, $trim);        foreach ($arr AS $key => $value) {            $ret[$key] = $value[0];        }    }    return $ret;}/* EOF - poster *//* BOF - go - prejdi na dalsi stranku */function go($url = NULL) {    if (is_null($url)) {        header("Refresh:0;url=" . $_SERVER['HTTP_REFERER']);        exit;    } else {        header("Location: " . $url);        exit;    }}/* EOF - go *//* BOF - date */function dateDB($date, $type = NULL) {    if ($date) {        $date_exp = explode(".", $date);        $rok = $date_exp[2];        $mesic = str_pad($date_exp[1], 2, '0', STR_PAD_LEFT);        $den = str_pad($date_exp[0], 2, '0', STR_PAD_LEFT);        $date_db = $rok . "-" . $mesic . "-" . $den;        if ($type == "od") {            $date_db = $date_db . " 00:00:00";        } elseif ($type == "do") {            $date_db = $date_db . " 23:59:59";        }        return $date_db;    }}/* EOF - date *//* BOF - decimalHours */function decimalHours($time, $type = 'hh:mm:ss') {    $hms = explode(":", $time);    if ($type == "hh:mm") {        $return = $hms[0] + ($hms[1] / 60);    } elseif ($type == "hh:mm:ss") {        $return = $hms[0] + ($hms[1] / 60) + ($hms[2] / 3600);    }    return number_format(round($return, 2), 2, ',', '');}/* EOF - decimalHours *//* BOF - sec to Hours */function secToHours($seconds, $type = 'hh:mm:ss') {    if ($seconds) {        $hours = floor($seconds / 3600);        $mins = floor(($seconds - ($hours * 3600)) / 60);        $sec = $seconds - (($mins * 60) + ($hours * 3600));        $hours = str_pad($hours, 2, "0", STR_PAD_LEFT);        $mins = str_pad($mins, 2, "0", STR_PAD_LEFT);        $sec = str_pad($sec, 2, "0", STR_PAD_LEFT);        if ($type == "hh:mm") {            $ret = $hours . ":" . $mins;        } elseif ($type == "hh:mm:ss") {            $ret = $hours . ":" . $mins . ":" . $sec;        }        return $ret;    } else {        return FALSE;    }}/* EOF - sec to Hours *//* BOF - mazani_slozek */function rrmdir($dir) {    if (is_dir($dir)) {        $objects = scandir($dir);        foreach ($objects as $object) {            if ($object != "." && $object != "..") {                if (filetype($dir . "/" . $object) == "dir") {                    rrmdir($dir . "/" . $object);                } else {                    unlink($dir . "/" . $object);                }            }        }        reset($objects);        rmdir($dir);    }}/* EOF - mazani_slozek *//* BOF - navratova URL adresa */function returnPage($targetURL) {    $pageURL = 'http';    if ($_SERVER["HTTPS"] == "on") {        $pageURL .= "s";    }    $pageURL .= "://";    if ($_GET['strana'] != 1) {        $page = ":" . $_GET['strana'];    } else {        $page = "";    }    $targetURL = str_replace(".html", "", $targetURL);    $targetURL = ltrim($targetURL, "/");    $pageURL .= $_SERVER["SERVER_NAME"] . "/" . $targetURL . $page . ".html";    return $pageURL;}/* EOF - navratova URL adresa *//* BOF - citelna velikost souboru */function humanFileSize($size, $unit = "") {    if ((!$unit && $size >= 1 << 30) OR $unit == "GB") {        return number_format($size / (1 << 30), 2, ',', ' ') . " GB";    }    if ((!$unit && $size >= 1 << 20) OR $unit == "MB") {        return number_format($size / (1 << 20), 2, ',', ' ') . " MB";    }    if ((!$unit && $size >= 1 << 10) OR $unit == "KB") {        return number_format($size / (1 << 10), 2, ',', ' ') . " KB";    }    return number_format($size, 0, ',', ' ') . " bytes";}/* EOF - citelna velikost souboru */?>